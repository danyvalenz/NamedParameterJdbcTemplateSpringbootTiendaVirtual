# Internal Server Configuration
# ------------------------------------------------------------
server.servlet.context-path=/tiendavirtual/
server.port=8083

# SSO - Integration
# ------------------------------------------------------------
app.authUri=https://sso.coppel.io:50061/api/v1/verify
app.ignoreSession=true


# Database and Connection Pool configuration
# Spring Boot DataSource
# ------------------------------------------------------------
# Postgres Connection String
# Comando para analizar conexiones creadas por Hikari en Postgres
# SELECT now(), * FROM pg_stat_activity WHERE application_name = 'WS001_ProcesoSalidas'



#Conexion tiendaVirtual
tiendavirtual.datasource.password=69daed867cbb9c0f7cbb9c0f7cbb9c0f
tiendavirtual.datasource.username=sysecommerce
tiendavirtual.datasource.jdbc-url=jdbc:postgresql://10.44.4.69:5432/tiendavirtual?currentSchema=public&ApplicationName=iwms_tiendavirtual&socketTimeout=30

#Conexion tienda.0800
tienda800.datasource.password=69daed867cbb9c0f7cbb9c0f7cbb9c0f
tienda800.datasource.username=sysecommerce
tienda800.datasource.jdbc-url=jdbc:postgresql://10.44.4.69:5432/tienda.0800?currentSchema=public&ApplicationName=iwms_tiendavirtual&socketTimeout=30

spring.jpa.show-sql=false
server.error.include.message=always

# MSSQL Server Connection String
# Comando para analizar conexiones creadas por Hikari en MSSQL Server
# SELECT c.session_id, c.net_transport, c.encrypt_option, c.auth_scheme, s.host_name, s.program_name, s.client_interface_name, s.login_name, c.connect_time, s.login_time
# FROM sys.dm_exec_connections AS c JOIN sys.dm_exec_sessions AS s ON c.session_id = s.session_id
# WHERE s.program_name = 'nom_aplicacion'
# spring.datasource.url=jdbc:sqlserver://ipserver;databaseName=test;applicationName=nom_aplicacion;socketTimeout=30000
# spring.datasource.username=user
# spring.datasource.password=password

# spring.datasource.connectionProperties=useUnicode=true;characterEncoding=utf-8;
spring.datasource.tomcat.connection-properties=useUnicode=true;characterEncoding=utf-8;

# Spring Data JPA
# ------------------------------------------------------------
spring.jpa.hibernate.ddl-auto=none

##Se agrega en el muebles config

##Numero de conexiones activas minimas con la BD;
spring.datasource.hikari.minimumIdle=4
##Maximo de conexiones activas en el pool de hikari
spring.datasource.hikari.maximumPoolSize=30

#Tiempo de duracion de la conexion una vez que muere sin contar las minimas conexiones activas
spring.datasource.hikari.idleTimeout=15000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP

##Tiempo maximo de duracion de una conexion en el pool antes de que de timeout
spring.datasource.hikari.maxLifetime=1800000

##Tiempo maximo del cliente a la espera de una conexion del pool
spring.datasource.hikari.connectionTimeout=120000
##Buscar leaks
spring.datasource.hikari.leakDetectionThreshold=2000

##MODO DEBUG PARA HIKARI
##NO MANDAR A PROD
#logging.level.com.zaxxer.hikari = debug


# Show details of health endpoint
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=mappings